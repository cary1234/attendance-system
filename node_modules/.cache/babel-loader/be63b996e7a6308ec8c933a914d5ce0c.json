{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CBondoc Desktop\\\\Desktop\\\\attendance-system\\\\src\\\\components\\\\Body.js\";\nimport { Button, Modal, Container, Row, Col } from 'react-bootstrap';\nimport Alert from 'react-bootstrap/Alert';\nimport date from 'date-and-time';\nimport { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst now = new Date();\nexport function getCurrentDate() {\n  let separator = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  let newDate = new Date();\n  let date = newDate.getDate();\n  let month = newDate.getMonth() + 1;\n  let year = newDate.getFullYear();\n  return `${year}${separator}${month < 10 ? `0${month}` : `${month}`}${separator}${date}`;\n}\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nfunction tick() {\n  const element = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello, world!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"It is \", new Date().toLocaleTimeString(), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n\n  root.render(element);\n}\n\nsetInterval(tick, 1000);\n\nconst Body = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: date.format(now, 'YYYY/MM/DD HH:mm:ss')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: getCurrentDate()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"root\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), ['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark'].map(variant => /*#__PURE__*/_jsxDEV(Alert, {\n        variant: variant,\n        children: [\"This is a \", variant, \" alert\\u2014check it out!\"]\n      }, variant, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          className: \"text-center\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Body;\nexport default Body;\n\nvar _c;\n\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["Button","Modal","Container","Row","Col","Alert","date","Component","render","ReactDOM","now","Date","getCurrentDate","separator","newDate","getDate","month","getMonth","year","getFullYear","root","createRoot","document","getElementById","tick","element","toLocaleTimeString","setInterval","Body","format","map","variant"],"sources":["C:/Users/CBondoc Desktop/Desktop/attendance-system/src/components/Body.js"],"sourcesContent":["\r\nimport { Button, Modal, Container, Row, Col } from 'react-bootstrap';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport date from 'date-and-time';\r\n\r\n\r\n\r\n\r\nimport { Component } from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport ReactDOM from 'react-dom'\r\n\r\n\r\nconst now = new Date();\r\n\r\n\r\n\r\nexport function getCurrentDate(separator = '') {\r\n\r\n    let newDate = new Date()\r\n    let date = newDate.getDate();\r\n    let month = newDate.getMonth() + 1;\r\n    let year = newDate.getFullYear();\r\n\r\n    return `${year}${separator}${month < 10 ? `0${month}` : `${month}`}${separator}${date}`\r\n}\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\n\r\nfunction tick() {\r\n    const element = (\r\n        <div>\r\n            <h1>Hello, world!</h1>\r\n            <h2>It is {new Date().toLocaleTimeString()}.</h2>\r\n        </div>\r\n    );\r\n    root.render(element);\r\n}\r\n\r\nsetInterval(tick, 1000);\r\n\r\nconst Body = () => {\r\n    return (\r\n        <>\r\n            <Container >\r\n                <Row>\r\n                    <Col>{date.format(now, 'YYYY/MM/DD HH:mm:ss')}</Col>\r\n                    <Col>{getCurrentDate()}</Col>\r\n                    <Col><p id='root'></p></Col>\r\n                </Row>\r\n                {[\r\n                    'primary',\r\n                    'secondary',\r\n                    'success',\r\n                    'danger',\r\n                    'warning',\r\n                    'info',\r\n                    'light',\r\n                    'dark',\r\n                ].map((variant) => (\r\n                    <Alert key={variant} variant={variant}>\r\n                        This is a {variant} alertâ€”check it out!\r\n                    </Alert>\r\n                ))}\r\n            </Container>\r\n\r\n            <Container>\r\n                <Row>\r\n                    <Col className='text-center'></Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Body\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";AACA,SAASA,MAAT,EAAiBC,KAAjB,EAAwBC,SAAxB,EAAmCC,GAAnC,EAAwCC,GAAxC,QAAmD,iBAAnD;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AAKA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,QAAP,MAAqB,WAArB;;;AAGA,MAAMC,GAAG,GAAG,IAAIC,IAAJ,EAAZ;AAIA,OAAO,SAASC,cAAT,GAAwC;EAAA,IAAhBC,SAAgB,uEAAJ,EAAI;EAE3C,IAAIC,OAAO,GAAG,IAAIH,IAAJ,EAAd;EACA,IAAIL,IAAI,GAAGQ,OAAO,CAACC,OAAR,EAAX;EACA,IAAIC,KAAK,GAAGF,OAAO,CAACG,QAAR,KAAqB,CAAjC;EACA,IAAIC,IAAI,GAAGJ,OAAO,CAACK,WAAR,EAAX;EAEA,OAAQ,GAAED,IAAK,GAAEL,SAAU,GAAEG,KAAK,GAAG,EAAR,GAAc,IAAGA,KAAM,EAAvB,GAA4B,GAAEA,KAAM,EAAE,GAAEH,SAAU,GAAEP,IAAK,EAAtF;AACH;AAED,MAAMc,IAAI,GAAGX,QAAQ,CAACY,UAAT,CAAoBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB,CAAb;;AAEA,SAASC,IAAT,GAAgB;EACZ,MAAMC,OAAO,gBACT;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAA,qBAAW,IAAId,IAAJ,GAAWe,kBAAX,EAAX;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;;EAMAN,IAAI,CAACZ,MAAL,CAAYiB,OAAZ;AACH;;AAEDE,WAAW,CAACH,IAAD,EAAO,IAAP,CAAX;;AAEA,MAAMI,IAAI,GAAG,MAAM;EACf,oBACI;IAAA,wBACI,QAAC,SAAD;MAAA,wBACI,QAAC,GAAD;QAAA,wBACI,QAAC,GAAD;UAAA,UAAMtB,IAAI,CAACuB,MAAL,CAAYnB,GAAZ,EAAiB,qBAAjB;QAAN;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI,QAAC,GAAD;UAAA,UAAME,cAAc;QAApB;UAAA;UAAA;UAAA;QAAA,QAFJ,eAGI,QAAC,GAAD;UAAA,uBAAK;YAAG,EAAE,EAAC;UAAN;YAAA;YAAA;YAAA;UAAA;QAAL;UAAA;UAAA;UAAA;QAAA,QAHJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,EAMK,CACG,SADH,EAEG,WAFH,EAGG,SAHH,EAIG,QAJH,EAKG,SALH,EAMG,MANH,EAOG,OAPH,EAQG,MARH,EASCkB,GATD,CASMC,OAAD,iBACF,QAAC,KAAD;QAAqB,OAAO,EAAEA,OAA9B;QAAA,yBACeA,OADf;MAAA,GAAYA,OAAZ;QAAA;QAAA;QAAA;MAAA,QAVH,CANL;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAuBI,QAAC,SAAD;MAAA,uBACI,QAAC,GAAD;QAAA,uBACI,QAAC,GAAD;UAAK,SAAS,EAAC;QAAf;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAvBJ;EAAA,gBADJ;AA+BH,CAhCD;;KAAMH,I;AAoCN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}