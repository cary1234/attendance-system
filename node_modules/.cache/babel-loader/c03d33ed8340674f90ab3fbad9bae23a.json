{"ast":null,"code":"const axios = require('axios');\n\nconst assert = require('assert');\n\nconst HOST_HEADER_NAME = 'x-rapidapi-host';\nconst HOST_HEADER_VALUE = 'spott.p.rapidapi.com';\nconst API_KEY_HEADER_NAME = 'x-rapidapi-key';\nconst BASE_URL = 'https://spott.p.rapidapi.com';\n\nclass Fetcher {\n  constructor(apiKey) {\n    assert(apiKey, 'A Spott API Key is required');\n    this.apiKey = apiKey;\n  }\n\n  get(_ref) {\n    let {\n      path,\n      query\n    } = _ref;\n    const headers = getHeaders(this.apiKey);\n    const params = {\n      headers,\n      url: path,\n      params: query,\n      method: 'get',\n      baseURL: BASE_URL\n    };\n    return axios(params).then(handleSuccessResponse);\n  }\n\n}\n\nfunction getHeaders(apiKey) {\n  return {\n    [HOST_HEADER_NAME]: HOST_HEADER_VALUE,\n    [API_KEY_HEADER_NAME]: apiKey\n  };\n}\n\n;\n\nfunction handleSuccessResponse(response) {\n  return response.data;\n}\n\nmodule.exports = Fetcher;","map":{"version":3,"names":["axios","require","assert","HOST_HEADER_NAME","HOST_HEADER_VALUE","API_KEY_HEADER_NAME","BASE_URL","Fetcher","constructor","apiKey","get","path","query","headers","getHeaders","params","url","method","baseURL","then","handleSuccessResponse","response","data","module","exports"],"sources":["C:/Users/CBondoc Desktop/Desktop/KodeGo/node_modules/spott-nodejs-sdk/src/fetcher.js"],"sourcesContent":["const axios = require('axios');\nconst assert = require('assert');\n\nconst HOST_HEADER_NAME = 'x-rapidapi-host';\nconst HOST_HEADER_VALUE = 'spott.p.rapidapi.com';\nconst API_KEY_HEADER_NAME = 'x-rapidapi-key';\nconst BASE_URL = 'https://spott.p.rapidapi.com';\n\nclass Fetcher {\n  constructor(apiKey) {\n    assert(apiKey, 'A Spott API Key is required');\n    this.apiKey = apiKey;\n  }\n\n  get({path, query}) {\n    const headers = getHeaders(this.apiKey);\n\n    const params = {\n      headers,\n      url: path,\n      params: query,\n      method: 'get',\n      baseURL: BASE_URL\n    };\n\n    return axios(params)\n      .then(handleSuccessResponse);\n  }\n}\n\nfunction getHeaders(apiKey) {\n  return {\n    [HOST_HEADER_NAME]: HOST_HEADER_VALUE,\n    [API_KEY_HEADER_NAME]: apiKey\n  };\n};\n\nfunction handleSuccessResponse(response) {\n  return response.data;\n}\n\nmodule.exports = Fetcher;\n"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AAEA,MAAME,gBAAgB,GAAG,iBAAzB;AACA,MAAMC,iBAAiB,GAAG,sBAA1B;AACA,MAAMC,mBAAmB,GAAG,gBAA5B;AACA,MAAMC,QAAQ,GAAG,8BAAjB;;AAEA,MAAMC,OAAN,CAAc;EACZC,WAAW,CAACC,MAAD,EAAS;IAClBP,MAAM,CAACO,MAAD,EAAS,6BAAT,CAAN;IACA,KAAKA,MAAL,GAAcA,MAAd;EACD;;EAEDC,GAAG,OAAgB;IAAA,IAAf;MAACC,IAAD;MAAOC;IAAP,CAAe;IACjB,MAAMC,OAAO,GAAGC,UAAU,CAAC,KAAKL,MAAN,CAA1B;IAEA,MAAMM,MAAM,GAAG;MACbF,OADa;MAEbG,GAAG,EAAEL,IAFQ;MAGbI,MAAM,EAAEH,KAHK;MAIbK,MAAM,EAAE,KAJK;MAKbC,OAAO,EAAEZ;IALI,CAAf;IAQA,OAAON,KAAK,CAACe,MAAD,CAAL,CACJI,IADI,CACCC,qBADD,CAAP;EAED;;AAnBW;;AAsBd,SAASN,UAAT,CAAoBL,MAApB,EAA4B;EAC1B,OAAO;IACL,CAACN,gBAAD,GAAoBC,iBADf;IAEL,CAACC,mBAAD,GAAuBI;EAFlB,CAAP;AAID;;AAAA;;AAED,SAASW,qBAAT,CAA+BC,QAA/B,EAAyC;EACvC,OAAOA,QAAQ,CAACC,IAAhB;AACD;;AAEDC,MAAM,CAACC,OAAP,GAAiBjB,OAAjB"},"metadata":{},"sourceType":"script"}