{"ast":null,"code":"const assert = require('assert');\n\nconst ARRAY_OPTIONS = {\n  types: 'type',\n  countries: 'country',\n  adminDivisions1: 'adminDivision1',\n  adminDivisions2: 'adminDivision2'\n};\nconst ARRAY_KEYS = Object.keys(ARRAY_OPTIONS);\n\nfunction parseArrayOptions(options) {\n  return Object.keys(options).reduce((result, key) => {\n    const value = options[key];\n    if (!ARRAY_KEYS.includes(key)) return { ...result,\n      [key]: value\n    };\n    if (!value) return result;\n    assert(Array.isArray(value), `Expected parameter \"${key}\" to be an array`);\n    const newKey = ARRAY_OPTIONS[key];\n    const newValue = value.join(',');\n    return { ...result,\n      [newKey]: newValue\n    };\n  }, {});\n}\n\nmodule.exports = parseArrayOptions;","map":{"version":3,"names":["assert","require","ARRAY_OPTIONS","types","countries","adminDivisions1","adminDivisions2","ARRAY_KEYS","Object","keys","parseArrayOptions","options","reduce","result","key","value","includes","Array","isArray","newKey","newValue","join","module","exports"],"sources":["C:/Users/CBondoc Desktop/Desktop/KodeGo/node_modules/spott-nodejs-sdk/src/utils/parse-array-options.js"],"sourcesContent":["const assert = require('assert');\n\nconst ARRAY_OPTIONS = {\n  types: 'type',\n  countries: 'country',\n  adminDivisions1: 'adminDivision1',\n  adminDivisions2: 'adminDivision2'\n};\n\nconst ARRAY_KEYS = Object.keys(ARRAY_OPTIONS);\n\nfunction parseArrayOptions(options) {\n  return Object.keys(options).reduce((result, key) => {\n    const value = options[key];\n\n    if (!ARRAY_KEYS.includes(key)) return { ...result, [key]: value };\n    if (!value) return result;\n\n    assert(Array.isArray(value), `Expected parameter \"${key}\" to be an array`);\n    const newKey = ARRAY_OPTIONS[key];\n    const newValue = value.join(',');\n    return { ...result, [newKey]: newValue };\n  }, {});\n}\n\nmodule.exports = parseArrayOptions;\n"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AAEA,MAAMC,aAAa,GAAG;EACpBC,KAAK,EAAE,MADa;EAEpBC,SAAS,EAAE,SAFS;EAGpBC,eAAe,EAAE,gBAHG;EAIpBC,eAAe,EAAE;AAJG,CAAtB;AAOA,MAAMC,UAAU,GAAGC,MAAM,CAACC,IAAP,CAAYP,aAAZ,CAAnB;;AAEA,SAASQ,iBAAT,CAA2BC,OAA3B,EAAoC;EAClC,OAAOH,MAAM,CAACC,IAAP,CAAYE,OAAZ,EAAqBC,MAArB,CAA4B,CAACC,MAAD,EAASC,GAAT,KAAiB;IAClD,MAAMC,KAAK,GAAGJ,OAAO,CAACG,GAAD,CAArB;IAEA,IAAI,CAACP,UAAU,CAACS,QAAX,CAAoBF,GAApB,CAAL,EAA+B,OAAO,EAAE,GAAGD,MAAL;MAAa,CAACC,GAAD,GAAOC;IAApB,CAAP;IAC/B,IAAI,CAACA,KAAL,EAAY,OAAOF,MAAP;IAEZb,MAAM,CAACiB,KAAK,CAACC,OAAN,CAAcH,KAAd,CAAD,EAAwB,uBAAsBD,GAAI,kBAAlD,CAAN;IACA,MAAMK,MAAM,GAAGjB,aAAa,CAACY,GAAD,CAA5B;IACA,MAAMM,QAAQ,GAAGL,KAAK,CAACM,IAAN,CAAW,GAAX,CAAjB;IACA,OAAO,EAAE,GAAGR,MAAL;MAAa,CAACM,MAAD,GAAUC;IAAvB,CAAP;EACD,CAVM,EAUJ,EAVI,CAAP;AAWD;;AAEDE,MAAM,CAACC,OAAP,GAAiBb,iBAAjB"},"metadata":{},"sourceType":"script"}